//https://leetcode.com/problems/unique-paths/description/


class Solution {
public:
    int recursion(int m,int n,int i,int j,vector<vector<int>> &memo){
        if(i==m-1 && j==n-1){
            return 1;
        }
        if(i==m || j==n){
            return 0;
        }
        if(memo[i][j]!=-1){
            return memo[i][j];
        }
        memo[i][j]=recursion(m,n,i+1,j,memo)+recursion(m,n,i,j+1,memo);
        return memo[i][j];
    }
    int uniquePaths(const int m,const int n) {
        // Using recursion
        vector<vector<int>> memo(m,vector<int>(n,-1));
        int result=recursion(m,n,0,0,memo);
        return result;
        
    }
};
